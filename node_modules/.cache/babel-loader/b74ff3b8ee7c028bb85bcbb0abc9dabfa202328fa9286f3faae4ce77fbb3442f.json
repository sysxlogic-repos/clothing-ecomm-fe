{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\ecomm\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        isAuthenticated: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: false,\n  error: null\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      verifyToken(token);\n    }\n  }, []);\n  const verifyToken = async token => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await authAPI.verifyToken(token);\n      if (response.data.valid) {\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            user: response.data.user,\n            token: token\n          }\n        });\n      } else {\n        localStorage.removeItem('token');\n        dispatch({\n          type: 'LOGOUT'\n        });\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n      dispatch({\n        type: 'LOGOUT'\n      });\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n  const login = async (phoneNumber, otp) => {\n    try {\n      dispatch({\n        type: 'LOGIN_START'\n      });\n      const response = await authAPI.login({\n        phoneNumber,\n        otp\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const sendOTP = async phoneNumber => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await authAPI.sendOTP({\n        phoneNumber\n      });\n      toast.success('OTP sent successfully!');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to send OTP';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n  const signup = async userData => {\n    try {\n      dispatch({\n        type: 'LOGIN_START'\n      });\n      const response = await authAPI.signup(userData);\n      const {\n        user,\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Account created successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Signup failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully!');\n  };\n  const updateUser = async userData => {\n    try {\n      const response = await authAPI.updateProfile(userData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: response.data.user\n      });\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Update failed';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    sendOTP,\n    signup,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","loading","error","user","payload","token","isAuthenticated","initialState","localStorage","getItem","AuthProvider","children","_s","dispatch","verifyToken","response","data","valid","removeItem","login","phoneNumber","otp","setItem","success","_error$response","_error$response$data","errorMessage","message","sendOTP","_error$response2","_error$response2$data","signup","userData","_error$response3","_error$response3$data","logout","updateUser","updateProfile","_error$response4","_error$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/test/ecomm/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        isAuthenticated: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload }\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: false,\n  error: null\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      verifyToken(token);\n    }\n  }, []);\n\n  const verifyToken = async (token) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const response = await authAPI.verifyToken(token);\n      if (response.data.valid) {\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            user: response.data.user,\n            token: token\n          }\n        });\n      } else {\n        localStorage.removeItem('token');\n        dispatch({ type: 'LOGOUT' });\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n      dispatch({ type: 'LOGOUT' });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const login = async (phoneNumber, otp) => {\n    try {\n      dispatch({ type: 'LOGIN_START' });\n      const response = await authAPI.login({ phoneNumber, otp });\n      \n      const { user, token } = response.data;\n      localStorage.setItem('token', token);\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: { user, token }\n      });\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const sendOTP = async (phoneNumber) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const response = await authAPI.sendOTP({ phoneNumber });\n      toast.success('OTP sent successfully!');\n      return { success: true, data: response.data };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Failed to send OTP';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const signup = async (userData) => {\n    try {\n      dispatch({ type: 'LOGIN_START' });\n      const response = await authAPI.signup(userData);\n      \n      const { user, token } = response.data;\n      localStorage.setItem('token', token);\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: { user, token }\n      });\n      \n      toast.success('Account created successfully!');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Signup failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({ type: 'LOGOUT' });\n    toast.success('Logged out successfully!');\n  };\n\n  const updateUser = async (userData) => {\n    try {\n      const response = await authAPI.updateProfile(userData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: response.data.user\n      });\n      toast.success('Profile updated successfully!');\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Update failed';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const value = {\n    ...state,\n    login,\n    sendOTP,\n    signup,\n    logout,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}